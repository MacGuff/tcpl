the
zen
of
python,
by
tim
peters
beautiful
is
better
than
ugly.
explicit
is
better
than
implicit.
simple
is
better
than
complex.
complex
is
better
than
complicated.
flat
is
better
than
nested.
sparse
is
better
than
dense.
readability
counts.
special
cases
aren't
special
enough
to
break
the
rules.
although
practicality
beats
purity.
errors
should
never
pass
silently.
unless
explicitly
silenced.
in
the
face
of
ambiguity,
refuse
the
temptation
to
guess.
there
should
be
one--
and
preferably
only
one
--obvious
way
to
do
it.
although
that
way
may
not
be
obvious
at
first
unless
you're
dutch.
now
is
better
than
never.
although
never
is
often
better
than
*right*
now.
if
the
implementation
is
hard
to
explain,
it's
a
bad
idea.
if
the
implementation
is
easy
to
explain,
it
may
be
a
good
idea.
namespaces
are
one
honking
great
idea
--
let's
do
more
of
those!
THE
ZEN
OF
PYTHON,
BY
TIM
PETERS
BEAUTIFUL
IS
BETTER
THAN
UGLY.
EXPLICIT
IS
BETTER
THAN
IMPLICIT.
SIMPLE
IS
BETTER
THAN
COMPLEX.
COMPLEX
IS
BETTER
THAN
COMPLICATED.
FLAT
IS
BETTER
THAN
NESTED.
SPARSE
IS
BETTER
THAN
DENSE.
READABILITY
COUNTS.
SPECIAL
CASES
AREN'T
SPECIAL
ENOUGH
TO
BREAK
THE
RULES.
ALTHOUGH
PRACTICALITY
BEATS
PURITY.
ERRORS
SHOULD
NEVER
PASS
SILENTLY.
UNLESS
EXPLICITLY
SILENCED.
IN
THE
FACE
OF
AMBIGUITY,
REFUSE
THE
TEMPTATION
TO
GUESS.
THERE
SHOULD
BE
ONE--
AND
PREFERABLY
ONLY
ONE
--OBVIOUS
WAY
TO
DO
IT.
ALTHOUGH
THAT
WAY
MAY
NOT
BE
OBVIOUS
AT
FIRST
UNLESS
YOU'RE
DUTCH.
NOW
IS
BETTER
THAN
NEVER.
ALTHOUGH
NEVER
IS
OFTEN
BETTER
THAN
*RIGHT*
NOW.
IF
THE
IMPLEMENTATION
IS
HARD
TO
EXPLAIN,
IT'S
A
BAD
IDEA.
IF
THE
IMPLEMENTATION
IS
EASY
TO
EXPLAIN,
IT
MAY
BE
A
GOOD
IDEA.
NAMESPACES
ARE
ONE
HONKING
GREAT
IDEA
--
LET'S
DO
MORE
OF
THOSE!
